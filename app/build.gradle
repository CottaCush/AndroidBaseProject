apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'
    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 0
    def versionNumber = 0
    defaultConfig {
        applicationId "com.cottacush.android.example"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode versionNumber
        versionName "${versionMajor}.${versionMinor}.${versionPatch} Release"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    applicationVariants.all {
        variant ->
            variant.outputs.each {
                output ->
                    def fileNaming = "apk/RELEASES"
                    def outputFile = output.outputFile
                    if (variant.name.equalsIgnoreCase("staging") || variant.name.
                            equalsIgnoreCase("production")) {
                        def task = tasks.create("assembleRelease " +
                                "crashlyticsUploadDistributionRelease")
                        task.mustRunAfter("clean")
                    }
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        output.outputFileName = new File(getProject().getRootDir(), "${fileNaming}-" +
                                "${versionMajor}.${versionMinor}.${versionPatch}-${outputFile.name}")
                    }
            }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        development {
            dimension "default"
            applicationIdSuffix ".development"
            versionNameSuffix "-development"
            buildConfigField("String", "ENVIRONMENT", "\"development\"")
        }
        staging {
            dimension "default"
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            buildConfigField("String", "ENVIRONMENT", "\"staging\"")
            ext.betaDistributionReleaseNotesFilePath = "releaseNotes.txt"
            ext.betaDistributionEmailsFilePath = "stagingTesters.txt"
        }
        production {
            dimension "default"
            buildConfigField("String", "ENVIRONMENT", "\"production\"")
            ext.betaDistributionReleaseNotesFilePath = "releaseNotes.txt"
            ext.betaDistributionEmailsFilePath = "productionTesters.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation 'com.android.support:appcompat-v7:25.3.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.github.CottaCush:AndroidCommons:v1.1.2'
    testCompile 'junit:junit:4.12'
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}
